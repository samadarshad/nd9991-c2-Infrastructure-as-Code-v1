Description: >
    Samad Arshad / Udacity AWS Devops Project 2

Parameters:
    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
    WebInstanceAmiId:
        Description: Region specific image ami id for web servers
        Type: String
    WebInstanceType:
        Description: Instance type for web servers
        Type: String
    WebKeyName:
        Description: Key name for accessing public servers
        Type: String
    MinimumNumInstances:
        Description: Minimum size for web autoscaling group
        Type: Number
    MaximumNumInstances:
        Description: Maximum size for web autoscaling group
        Type: Number
    DesiredNumInstances:
        Description: Desired size for web autoscaling group
        Type: Number

Resources:
### Instances
    WebSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            GroupDescription: Allow http + Bastion ssh traffic to web servers, and unrestricted outbound traffic
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp: !Join ["", [Fn::ImportValue: !Sub "${EnvironmentName}-BASTION-PRIV-IP", "/32"]]
            SecurityGroupEgress:
            - IpProtocol: -1
              CidrIp: 0.0.0.0/0
            VpcId: 
                Fn::ImportValue: !Sub ${EnvironmentName}-VPCID

    WebInstanceProfile:
        Type: AWS::IAM::InstanceProfile
        Properties: 
            Roles: 
            - Fn::ImportValue: !Sub ${EnvironmentName}-S3-IAM-ROLE

    WebLaunchConfig: 
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            ImageId: !Ref WebInstanceAmiId
            SecurityGroups: 
                - !Ref WebSecurityGroup
            InstanceType: !Ref WebInstanceType
            IamInstanceProfile: !Ref WebInstanceProfile
            KeyName: !Ref WebKeyName
            BlockDeviceMappings:
                - DeviceName: /dev/sda1
                  Ebs:
                    VolumeSize: 10
                    VolumeType: "gp2"
            UserData: !Base64 |
                #!/bin/bash
                apt-get update -y
                apt-get install apache2 -y
                systemctl start apache2.service
                cd /var/www/html
                echo "Udacity Demo Web Server Up and Running!" > index.html


    WebAutoScalingGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier:
                - Fn::ImportValue: !Sub ${EnvironmentName}-PRIV-NETS
            LaunchConfigurationName: !Ref WebLaunchConfig
            MinSize: !Ref MinimumNumInstances
            MaxSize: !Ref MaximumNumInstances
            DesiredCapacity: !Ref DesiredNumInstances
            TargetGroupARNs:
            - !Ref WebTargetGroup

### Load Balancer
    WebTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: /
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 8
            HealthyThresholdCount: 2
            Port: 80
            Protocol: HTTP
            UnhealthyThresholdCount: 5
            VpcId: 
                Fn::ImportValue: !Sub ${EnvironmentName}-VPCID
    LoadBalancerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            GroupDescription: Allow all inbound http traffic to web servers, and http to internal servers
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            VpcId: 
                Fn::ImportValue: !Sub ${EnvironmentName}-VPCID
    LoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties: 
            SecurityGroups: 
                - !Ref WebSecurityGroup
            Subnets: 
                - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
                - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Load Balancer
    LoadBalancerListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            DefaultActions:
            - Type: forward
              TargetGroupArn:
                Ref: WebTargetGroup
            LoadBalancerArn: !Ref LoadBalancer
            Port: 80
            Protocol: HTTP



Outputs:
    LoadBalancerDNS: 
        Description: DNS of the Load Balancer
        Value: !Join ["", ["http://", !GetAtt LoadBalancer.DNSName]]
        Export:
            Name: !Sub ${EnvironmentName}-LB-DNS